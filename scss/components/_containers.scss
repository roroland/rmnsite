@use '../abstracts/' as *;

// Containers
.container{
  min-height: 100vh;
  margin: 0 auto;
  padding: 1rem 0;
  position: relative;
  @media only screen and (min-width: 48em) {
    min-height: auto;
  }
  a:hover{
    color: $palered;
  }
  .test{
    width: 100%;
    position: relative;
    left: 0;
    right: 0;
    top: 0;
    overflow: hidden;
    z-index: 0;

    @media only screen and (max-width: 48em) {
      --deco-width: 1236px;
      min-height: 320px;
      width: var(--deco-width);
    }
    #middle{
      transform-origin: center;
    }
  }
  &.intro{
    align-items: center;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    padding: 0;
    @media only screen and (max-width: 47.99em){
      min-height: 60vh;
    }
    @media only screen and (max-width: 47.99em) and (orientation: landscape){
      min-height: 82vh;
    }
    @media only screen and (min-width: 48em){
      flex-flow: column nowrap;
      justify-content: center;
      min-height: 91vh;
      padding: inherit;
    }
    @media only screen and (min-width: 64em){
      min-height: 85vh;
    }
    @media only screen and (min-width: 100em){
      min-height: 90vh;
      justify-content: center;
    }
  }
  &.featurebtm--three{
    &::after{
      content: '';
      background: url('../images/deco-invertsml-3.svg') no-repeat;
      background-size: cover;
      position: absolute;
      width: 100%;
      min-height: 50px;
      bottom: -1px;
      left: 0;
      z-index: 1;
    }
  }
}
.menuTop{
  // Trigger to switch class for main menu
  display: block;
}
.line{
  margin: $component-space 0;
  position: relative;
  &.line-over{
    margin: $component-space 0 0;
    top: -2rem;
    &:last-of-type{
      top: 0;
    }
  }
}

// Anchors offsets
.offset{
  position: relative;
  display: inline-block;
  height: 0;
  width: 0;
  &[data-offset='about']{
    top: var(--data-about);
  }
  &[data-offset='what']{
    top: var(--data-what);
  }
  &[data-offset='works']{
    top: var(--data-works);
  }
}

