// Avatar
@use '../abstracts/' as *;

.intro--wrapper{  
  display: flex;
  color: $dark;
  flex-flow: row wrap;
  justify-content: center;
  align-items: flex-start;
  position: relative;
  transition: all .3s ease-out;
  width: 100%;
  @media only screen and (min-width: 48em){
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    height: 100%;
  }
  @media only screen and (min-width: 100em){
    top: 0;
  }
  a{
    color: currentColor;
    display: block;
    text-decoration: none;
  }

  .heroText{
    border-radius: 5px;
    border: 1pt solid transparent;
    padding: $component-space-tiny $component-space;
    display: block;
    position: relative;
    z-index: 99999;
    max-width: 30rem;
    transition: top .25s ease-in-out;
    z-index: 20;
    width: 100%;
    
    @media only screen and (max-width: 47.99em) {
      border: 0;
      padding: 0;
      margin-bottom: $component-space;
      width: 85%;
    }
    @media only screen and (min-width: 48em) {
      position: relative;
    }

    path {
      stroke-dasharray: 100;
      stroke-dashoffset: 100;
      @for $i from 1 to 36 {
        &:nth-child(#{$i}) {
          animation-delay: $i * .12s;
          animation-name: dash;
          animation-timing-function: ease-in;
          animation-duration: .6s;
          animation-fill-mode: forwards;
        }
      }
    }
  }
  @keyframes colorBg {
    from{
      background-color: transparent;
    }
    to{
      background-color: $lighter;
    }
  }
  @keyframes borderColor {
    from{
      border: 1pt solid transparent;
    }
    to{
      border: 1pt solid $normal;
    }
  }
  @keyframes dash {
    from {
      stroke-dashoffset: 100;
    }
    to {
      stroke-dashoffset: 0;
    }
  }

  .heroText,
  h3,
  h4{
    transition: top .25s ease-in-out;
    position: relative;
    text-align: center;
    font-weight: 300;
  }
  h3{
    display: none;
    opacity: 0;
  }
  h4{
    opacity: 0;
    z-index: 10;
    @media only screen and (max-width: 47.99em) and (orientation: landscape){
      display: none;
    }
    @media only screen and (min-width: 100em){
      top: #{$component-space};
    }
    
    > span{
      font-weight: 400;
      text-decoration: underline;
    }
    
    small{
      display: block;
      color: $dark;
      margin-top: $component-space-tiny;
      text-align: center;
      span{
        opacity: 0;
        animation: fade 1s ease-out 2.5s forwards;
        text-decoration: none;
        color: $dark;
      }
    }
  }

  @keyframes fade {
    0%{
      opacity: 0;
    }
    100%{
      opacity: 1;
    }
  }
}
